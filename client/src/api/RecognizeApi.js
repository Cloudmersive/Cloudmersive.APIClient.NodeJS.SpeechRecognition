/**
 * speechapi
 * Speech APIs enable you to recognize speech and convert it to text using advanced machine learning, and also to convert text to speech.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SpeechRecognitionResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/SpeechRecognitionResult'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveSpeechApiClient) {
      root.CloudmersiveSpeechApiClient = {};
    }
    root.CloudmersiveSpeechApiClient.RecognizeApi = factory(root.CloudmersiveSpeechApiClient.ApiClient, root.CloudmersiveSpeechApiClient.SpeechRecognitionResult);
  }
}(this, function(ApiClient, SpeechRecognitionResult) {
  'use strict';

  /**
   * Recognize service.
   * @module api/RecognizeApi
   * @version 1.1.3
   */

  /**
   * Constructs a new RecognizeApi. 
   * @alias module:api/RecognizeApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the recognizeFile operation.
     * @callback module:api/RecognizeApi~recognizeFileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpeechRecognitionResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Recognize audio input as text using machine learning
     * Uses advanced machine learning to convert input audio, which can be mp3 or wav, into text.
     * @param {File} speechFile Speech file to perform the operation on.  Common file formats such as WAV, MP3 are supported.
     * @param {module:api/RecognizeApi~recognizeFileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpeechRecognitionResult}
     */
    this.recognizeFile = function(speechFile, callback) {
      var postBody = null;

      // verify the required parameter 'speechFile' is set
      if (speechFile === undefined || speechFile === null) {
        throw new Error("Missing the required parameter 'speechFile' when calling recognizeFile");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'speechFile': speechFile
      };

      var authNames = ['Apikey'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = SpeechRecognitionResult;

      return this.apiClient.callApi(
        '/speech/recognize/file', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
